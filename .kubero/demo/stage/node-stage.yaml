apiVersion: application.kubero.dev/v1alpha1
kind: KuberoApp
metadata:
  name: node-stage
  namespace: demo-production
spec:
  addons: []
  affinity: {}
  autodeploy: true
  autoscale: false
  autoscaling:
    enabled: false
  branch: main
  buildpack: custom
  cronjobs: []
  deploymentstrategy: git
  domain: node-stage.demo.kubero.dev
  envVars: []
  extraVolumes: []
  fullnameOverride: ""
  gitrepo:
    admin: false
  image:
    build:
      command: npm install
      repository: node
      tag: latest
    containerPort: 8080
    fetch:
      repository: ghcr.io/kubero-dev/buildpacks/fetch
      tag: main
    pullPolicy: Always
    repository: ghcr.io/kubero-dev/template-nodeapp
    run:
      command: node index.js
      repository: node
      securityContext:
        readOnlyRootFilesystem: true
      tag: latest
    tag: latest
  imagePullSecrets: []
  ingress:
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      kubernetes.io/tls-acme: "true"
    className: nginx
    enabled: true
    hosts:
    - host: node-stage.demo.kubero.dev
      paths:
      - path: /
        pathType: ImplementationSpecific
    tls:
    - hosts:
      - node-stage.demo.kubero.dev
      secretName: node-stage-tls
  name: node-stage
  nameOverride: ""
  nodeSelector: {}
  phase: stage
  pipeline: demo
  podAnnotations: {}
  podSecurityContext: {}
  podsize:
    default: true
    description: 'Small (CPU: 0.25, Memory: 0.5Gi)'
    name: small
    resources:
      limits:
        cpu: 500m
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 0.5Gi
  replicaCount: 1
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 0.5Gi
  service:
    port: 80
    type: ClusterIP
  serviceAccount:
    annotations: {}
    create: true
    name: ""
  tolerations: []
  vulnerabilityscan:
    enabled: false
    image:
      repository: aquasec/trivy
      tag: latest
    schedule: 5 8 * * *
  web:
    autoscaling:
      maxReplicas: 3
      minReplicas: 1
      targetCPUUtilizationPercentage: 80
      targetMemoryUtilizationPercentage: 80
    replicaCount: 2
  worker:
    autoscaling:
      maxReplicas: 0
      minReplicas: 0
      targetCPUUtilizationPercentage: 80
      targetMemoryUtilizationPercentage: 80
    replicaCount: 0